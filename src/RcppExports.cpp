// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// softmax
arma::rowvec softmax(const arma::rowvec& x);
RcppExport SEXP _CYBERTRACK_softmax(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(softmax(x));
    return rcpp_result_gen;
END_RCPP
}
// weighted_colMeans
arma::vec weighted_colMeans(const arma::mat X, const arma::vec& w, const double& tau);
RcppExport SEXP _CYBERTRACK_weighted_colMeans(SEXP XSEXP, SEXP wSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const double& >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(weighted_colMeans(X, w, tau));
    return rcpp_result_gen;
END_RCPP
}
// weighted_colMeans_v2
arma::mat weighted_colMeans_v2(Rcpp::List Y, Rcpp::List W, const double& tau, int L, int D);
RcppExport SEXP _CYBERTRACK_weighted_colMeans_v2(SEXP YSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP LSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type W(WSEXP);
    Rcpp::traits::input_parameter< const double& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(weighted_colMeans_v2(Y, W, tau, L, D));
    return rcpp_result_gen;
END_RCPP
}
// mvnorm_pdf
double mvnorm_pdf(arma::vec x, arma::vec mean, arma::mat sigma, bool log);
RcppExport SEXP _CYBERTRACK_mvnorm_pdf(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(mvnorm_pdf(x, mean, sigma, log));
    return rcpp_result_gen;
END_RCPP
}
// mvnorm_pdf_inv
double mvnorm_pdf_inv(arma::vec x, arma::vec mean, arma::mat invsigma, bool log);
RcppExport SEXP _CYBERTRACK_mvnorm_pdf_inv(SEXP xSEXP, SEXP meanSEXP, SEXP invsigmaSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type invsigma(invsigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(mvnorm_pdf_inv(x, mean, invsigma, log));
    return rcpp_result_gen;
END_RCPP
}
// mvnorm_pdf_inv_det
double mvnorm_pdf_inv_det(arma::vec x, arma::vec mean, arma::mat invsigma, double rootdet, bool log);
RcppExport SEXP _CYBERTRACK_mvnorm_pdf_inv_det(SEXP xSEXP, SEXP meanSEXP, SEXP invsigmaSEXP, SEXP rootdetSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type invsigma(invsigmaSEXP);
    Rcpp::traits::input_parameter< double >::type rootdet(rootdetSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(mvnorm_pdf_inv_det(x, mean, invsigma, rootdet, log));
    return rcpp_result_gen;
END_RCPP
}
// simW
List simW(arma::mat Y, arma::mat pi, arma::mat mu, arma::cube sigma, int L, arma::mat minmax_id, int T);
RcppExport SEXP _CYBERTRACK_simW(SEXP YSEXP, SEXP piSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP LSEXP, SEXP minmax_idSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type minmax_id(minmax_idSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(simW(Y, pi, mu, sigma, L, minmax_id, T));
    return rcpp_result_gen;
END_RCPP
}
// pi_update
arma::rowvec pi_update(arma::mat W, arma::rowvec pre_pi, arma::vec minmax_id, double alpha, int L, int T);
RcppExport SEXP _CYBERTRACK_pi_update(SEXP WSEXP, SEXP pre_piSEXP, SEXP minmax_idSEXP, SEXP alphaSEXP, SEXP LSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type pre_pi(pre_piSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type minmax_id(minmax_idSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(pi_update(W, pre_pi, minmax_id, alpha, L, T));
    return rcpp_result_gen;
END_RCPP
}
// alpha_update
double alpha_update(arma::mat W, double pre_alpha, arma::rowvec pre_pi, int L, arma::vec minmax_id);
RcppExport SEXP _CYBERTRACK_alpha_update(SEXP WSEXP, SEXP pre_alphaSEXP, SEXP pre_piSEXP, SEXP LSEXP, SEXP minmax_idSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type pre_alpha(pre_alphaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type pre_pi(pre_piSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type minmax_id(minmax_idSEXP);
    rcpp_result_gen = Rcpp::wrap(alpha_update(W, pre_alpha, pre_pi, L, minmax_id));
    return rcpp_result_gen;
END_RCPP
}
// sigma_update
arma::cube sigma_update(arma::mat mu, arma::mat z, arma::mat w, int L, double nu, arma::mat Lambda);
RcppExport SEXP _CYBERTRACK_sigma_update(SEXP muSEXP, SEXP zSEXP, SEXP wSEXP, SEXP LSEXP, SEXP nuSEXP, SEXP LambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda(LambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(sigma_update(mu, z, w, L, nu, Lambda));
    return rcpp_result_gen;
END_RCPP
}
// sigma_update_v2
arma::cube sigma_update_v2(arma::mat mu, Rcpp::List Y, Rcpp::List W, int L, int D, double nu, arma::mat Lambda);
RcppExport SEXP _CYBERTRACK_sigma_update_v2(SEXP muSEXP, SEXP YSEXP, SEXP WSEXP, SEXP LSEXP, SEXP DSEXP, SEXP nuSEXP, SEXP LambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda(LambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(sigma_update_v2(mu, Y, W, L, D, nu, Lambda));
    return rcpp_result_gen;
END_RCPP
}
// rowSums
arma::vec rowSums(const arma::mat& X);
RcppExport SEXP _CYBERTRACK_rowSums(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(rowSums(X));
    return rcpp_result_gen;
END_RCPP
}
// cybertrack
Rcpp::List cybertrack(Rcpp::List& Y, const int& L, const int& D, arma::mat piini, arma::rowvec alphaini, const arma::mat& muini, const arma::cube& Sigmaini, const double& tau, const double& nu, const arma::mat& Lambda, const int& num_iter, Rcpp::List t_id);
RcppExport SEXP _CYBERTRACK_cybertrack(SEXP YSEXP, SEXP LSEXP, SEXP DSEXP, SEXP piiniSEXP, SEXP alphainiSEXP, SEXP muiniSEXP, SEXP SigmainiSEXP, SEXP tauSEXP, SEXP nuSEXP, SEXP LambdaSEXP, SEXP num_iterSEXP, SEXP t_idSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const int& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const int& >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type piini(piiniSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type alphaini(alphainiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type muini(muiniSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Sigmaini(SigmainiSEXP);
    Rcpp::traits::input_parameter< const double& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< const double& >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< const int& >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type t_id(t_idSEXP);
    rcpp_result_gen = Rcpp::wrap(cybertrack(Y, L, D, piini, alphaini, muini, Sigmaini, tau, nu, Lambda, num_iter, t_id));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _CYBERTRACK_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _CYBERTRACK_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _CYBERTRACK_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _CYBERTRACK_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CYBERTRACK_softmax", (DL_FUNC) &_CYBERTRACK_softmax, 1},
    {"_CYBERTRACK_weighted_colMeans", (DL_FUNC) &_CYBERTRACK_weighted_colMeans, 3},
    {"_CYBERTRACK_weighted_colMeans_v2", (DL_FUNC) &_CYBERTRACK_weighted_colMeans_v2, 5},
    {"_CYBERTRACK_mvnorm_pdf", (DL_FUNC) &_CYBERTRACK_mvnorm_pdf, 4},
    {"_CYBERTRACK_mvnorm_pdf_inv", (DL_FUNC) &_CYBERTRACK_mvnorm_pdf_inv, 4},
    {"_CYBERTRACK_mvnorm_pdf_inv_det", (DL_FUNC) &_CYBERTRACK_mvnorm_pdf_inv_det, 5},
    {"_CYBERTRACK_simW", (DL_FUNC) &_CYBERTRACK_simW, 7},
    {"_CYBERTRACK_pi_update", (DL_FUNC) &_CYBERTRACK_pi_update, 6},
    {"_CYBERTRACK_alpha_update", (DL_FUNC) &_CYBERTRACK_alpha_update, 5},
    {"_CYBERTRACK_sigma_update", (DL_FUNC) &_CYBERTRACK_sigma_update, 6},
    {"_CYBERTRACK_sigma_update_v2", (DL_FUNC) &_CYBERTRACK_sigma_update_v2, 7},
    {"_CYBERTRACK_rowSums", (DL_FUNC) &_CYBERTRACK_rowSums, 1},
    {"_CYBERTRACK_cybertrack", (DL_FUNC) &_CYBERTRACK_cybertrack, 12},
    {"_CYBERTRACK_rcpparma_hello_world", (DL_FUNC) &_CYBERTRACK_rcpparma_hello_world, 0},
    {"_CYBERTRACK_rcpparma_outerproduct", (DL_FUNC) &_CYBERTRACK_rcpparma_outerproduct, 1},
    {"_CYBERTRACK_rcpparma_innerproduct", (DL_FUNC) &_CYBERTRACK_rcpparma_innerproduct, 1},
    {"_CYBERTRACK_rcpparma_bothproducts", (DL_FUNC) &_CYBERTRACK_rcpparma_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_CYBERTRACK(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
